clear all; close all; clc

%% Parameter
L = 100;                        %% cm
AnzahlElemente = 10;
LElemente = L/AnzahlElemente;   %% Laenge eines Elementes
Knoten = 0:L/AnzahlElemente:L;  %% Knotenvektor
AElement = (10-0.09*Knoten);    %% Querschnittsverlauf

F = 20000;                      %% N
E = 70*10^9;                    %% Pa (N/m^2)

%% Aufgabe 2: Analytische L�sung
% Berechne Symbolisch
u_exakt_symbolisch = dsolve('Du=F/(E*(10-0.09*x))', 'u(0)=0', 'x');
u_exakt_werte = dsolve('Du=20000/(70*10^9*(10-0.09*x))', 'u(0)=0', 'x')
% Umschreiben in Matlab-Funktion
u_exakt_werte = simplify(u_exakt_werte);
u_exakt_werte = matlabFunction(u_exakt_werte);
% Berechnen der realen Verschiebungspunkte fuer Plot
x_exakt = 0:.0001:L;
u_exakt = u_exakt_werte(x_exakt);

% Spannung:
sigma_exakt = F./(10-0.09*x_exakt);
% Visualisierung der realen Loesung
yyaxis left
[ax, h1, h2] = plotyy(x_exakt,u_exakt,x_exakt, sigma_exakt)
hold on 
set(get(ax(1),'Ylabel'),'String','u [cm]')
set(get(ax(2),'Ylabel'),'String','sigma [n/mm^2]')
xlabel('x [cm]')
title('Exakte Loesung')

%% Aufgabe 3: Formfunktion N & A_mittel

% Erstelle Funktionen(!) zur Berechnung der Veschiebung

N=sym(zeros(1,2));         % Erstelle leere mathematisch-symbolische Matrix N(x_i)

N(1,1) = @(x) (1-x/LElemente);      % so erstellt man in Matlab funktionen -> ein Aufruf mit x=0:.1:1 und N(x) ergaebe eine Wertetabelle!
                                        % in matlab nennt man diese
                                        % Funktionsdefinitionen auf der lhs 'function handle'
N(1,2) = @(x) (x/LElemente);

% Berechnung der mittleren Querschnittswerte
for k = 1:length(Knoten)-1
    A_mittel(k) = (AElement(k)+AElement(k+1))/2;
end

%% Aufgabe 4: B und D
% B
B = diff(N(x),x);

% D
D = E;                  % Da u_i_approx bei uns nur ein Skalar ist -> keine Matrix

% man koennte jetzt mit den Formeln fuer Sigma und Epsilon die Spannung und
% Dehnung an den Enden der jeweiligen finiten Elementen ausrechnen!
% allerdings in den Elementkoordinaten!!!
% um das eleganter zu gestalten transformieren wir in globale Koordinaten
% und rechnen dann die Spannungen an den Raendern aus!

%% Aufgabe 5:
for b=1:AnzahlElemente           %% Schleife fuer die Anzahl an gewaehlten Elementen
   K{b} = B(x)' * D * B(x) * A_mittel(b) * LElemente;
end

%% Aufgabe 6
%% KGesamt
KGesamt = zeros(length(Knoten),length(Knoten));
for b=length(K)
    
    KGesamt(b:b+1,b:b+1) = KGesamt(b:b+1,b:b+1)+K{b};
end

%% Aufgabe 7
fb = 'ausf�llen';
ua = 'ausf�llen';

Kaa = 'ausf�llen';
Kab = 'ausf�llen';
Kba = 'ausf�llen';
Kbb = 'ausf�llen';

ub = 'ausf�llen';
fa = 'ausf�llen';

%% Aufgabe 8
'ausf�llen'